{"expireTime":9007200911358258000,"key":"transformer-remark-markdown-html-ast-1d1637f4dfdb782c20fac1974f273112-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When it comes to concurrency control, there are specifically two mechanisms\naround it - pessimistic\nand optimistic locking.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":24,"offset":126}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":24,"offset":126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Optimistic locking","position":{"start":{"line":6,"column":3,"offset":130},"end":{"line":6,"column":21,"offset":148}}}],"position":{"start":{"line":6,"column":1,"offset":128},"end":{"line":6,"column":23,"offset":150}}}],"position":{"start":{"line":6,"column":1,"offset":128},"end":{"line":6,"column":23,"offset":150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The optimistic locking model is a concurrency control technique in which\nmultiple users are allowed to update the same record without informing the users\nthat others are also attempting to update the record.\nThe record changes are validated only when the record is committed.\nIf one user successfully updates the record,\nthe other users attempting to commit their concurrent updates are informed that a conflict exists.","position":{"start":{"line":8,"column":1,"offset":152},"end":{"line":13,"column":99,"offset":576}}}],"position":{"start":{"line":8,"column":1,"offset":152},"end":{"line":13,"column":99,"offset":576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An advantage of the optimistic locking model is that\nit avoids the overhead of locking a record for the duration of the action.\nIf there are no simultaneous updates,\nthen this model provides fast updates.","position":{"start":{"line":15,"column":1,"offset":578},"end":{"line":18,"column":39,"offset":785}}}],"position":{"start":{"line":15,"column":1,"offset":578},"end":{"line":18,"column":39,"offset":785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Pessimistic locking","position":{"start":{"line":20,"column":3,"offset":789},"end":{"line":20,"column":22,"offset":808}}}],"position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":24,"offset":810}}}],"position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":24,"offset":810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The pessimistic locking model prevents simultaneous updates to records.\nAs soon as one user starts to update a record,\na lock is placed on it.\nOther users who attempt to update this record are informed\nthat another user has an update in progress.\nThe other users must wait until the first user has finished committing their changes,\nthereby releasing the record lock.\nOnly then can another user make changes based on the previous user’s changes.","position":{"start":{"line":22,"column":1,"offset":812},"end":{"line":29,"column":78,"offset":1264}}}],"position":{"start":{"line":22,"column":1,"offset":812},"end":{"line":29,"column":78,"offset":1264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An advantage of the pessimistic locking model is that\nit avoids the issue of conflict resolution by preventing conflicts.\nUpdates are serialized\nand each subsequent update starts with\nthe committed record changes from the previous user.","position":{"start":{"line":31,"column":1,"offset":1266},"end":{"line":35,"column":53,"offset":1506}}}],"position":{"start":{"line":31,"column":1,"offset":1266},"end":{"line":35,"column":53,"offset":1506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"lock!","position":{"start":{"line":37,"column":3,"offset":1510},"end":{"line":37,"column":8,"offset":1515}}}],"position":{"start":{"line":37,"column":1,"offset":1508},"end":{"line":37,"column":10,"offset":1517}}}],"position":{"start":{"line":37,"column":1,"offset":1508},"end":{"line":37,"column":10,"offset":1517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Rails\n","position":{"start":{"line":39,"column":1,"offset":1519},"end":{"line":40,"column":1,"offset":1529}}},{"type":"element","tagName":"a","properties":{"href":"https://edgeapi.rubyonrails.org/classes/ActiveRecord/Locking/Pessimistic.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"raw","value":"<code class=\"language-text\">ActiveRecord::Locking::Pessimistic</code>","position":{"start":{"line":40,"column":2,"offset":1530},"end":{"line":40,"column":38,"offset":1566}}}],"position":{"start":{"line":40,"column":1,"offset":1529},"end":{"line":40,"column":118,"offset":1646}}},{"type":"text","value":"\nprovides support for row-level locking using the ","position":{"start":{"line":40,"column":118,"offset":1646},"end":{"line":41,"column":50,"offset":1697}}},{"type":"raw","value":"<code class=\"language-text\">lock!</code>","position":{"start":{"line":41,"column":50,"offset":1697},"end":{"line":41,"column":57,"offset":1704}}},{"type":"text","value":" method wrapped inside a transaction for example:- ","position":{"start":{"line":41,"column":57,"offset":1704},"end":{"line":41,"column":108,"offset":1755}}}],"position":{"start":{"line":39,"column":1,"offset":1519},"end":{"line":41,"column":108,"offset":1755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If two users press the like button for an article,\nat the same time then instead of the like_count of that article going up to 2,\nit will only increment to 1, because both users pressed increment\nfrom 0 to 1 at the same time.\nTo fix this we can use ","position":{"start":{"line":43,"column":1,"offset":1757},"end":{"line":47,"column":24,"offset":2010}}},{"type":"raw","value":"<code class=\"language-text\">lock!</code>","position":{"start":{"line":47,"column":24,"offset":2010},"end":{"line":47,"column":31,"offset":2017}}},{"type":"text","value":" wrapped inside a transaction.","position":{"start":{"line":47,"column":31,"offset":2017},"end":{"line":47,"column":61,"offset":2047}}}],"position":{"start":{"line":43,"column":1,"offset":1757},"end":{"line":47,"column":61,"offset":2047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"{% highlight ruby %}\nActiveRecord::Base.transaction do\narticle = Article.find(“00000000-0000-0000-0000-000000000001”).lock!(“FOR UPDATE NOWAIT”)\narticle.like_count += 1\narticle.save!\nend\n{% endhighlight %}","position":{"start":{"line":49,"column":1,"offset":2049},"end":{"line":55,"column":19,"offset":2271}}}],"position":{"start":{"line":49,"column":1,"offset":2049},"end":{"line":55,"column":19,"offset":2271}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What the code does here is\nfirst, it starts a database transaction.\nSecond, it acquires a pessimistic database lock.\nOnce the lock is acquired, the record is reloaded in memory,\nso that the values on the record match those in the locked database row.\nThe lock will prevent others from reading or writing to that row\nand anyone else trying to acquire a lock will have to wait for the lock to be released.","position":{"start":{"line":57,"column":1,"offset":2273},"end":{"line":63,"column":88,"offset":2682}}}],"position":{"start":{"line":57,"column":1,"offset":2273},"end":{"line":63,"column":88,"offset":2682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Also, we can pass various\n","position":{"start":{"line":65,"column":1,"offset":2684},"end":{"line":66,"column":1,"offset":2711}}},{"type":"element","tagName":"a","properties":{"href":"https://www.postgresql.org/docs/9.1/sql-select.html#SQL-FOR-UPDATE-SHARE","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"locking strategies","position":{"start":{"line":66,"column":2,"offset":2712},"end":{"line":66,"column":20,"offset":2730}}}],"position":{"start":{"line":66,"column":1,"offset":2711},"end":{"line":66,"column":95,"offset":2805}}},{"type":"text","value":"\nto the ","position":{"start":{"line":66,"column":95,"offset":2805},"end":{"line":67,"column":8,"offset":2814}}},{"type":"raw","value":"<code class=\"language-text\">lock!</code>","position":{"start":{"line":67,"column":8,"offset":2814},"end":{"line":67,"column":15,"offset":2821}}},{"type":"text","value":" method as supported by the underlying Database\nfor example, we used ","position":{"start":{"line":67,"column":15,"offset":2821},"end":{"line":68,"column":22,"offset":2891}}},{"type":"raw","value":"<code class=\"language-text\">FOR UPDATE NOWAIT</code>","position":{"start":{"line":68,"column":22,"offset":2891},"end":{"line":68,"column":41,"offset":2910}}},{"type":"text","value":" on Postgres DB\nwhat it means is other transactions that attempt UPDATE, DELETE,\nor SELECT FOR UPDATE on this row will be blocked\nuntil the current transaction ends\nand suppose another transaction tries to acquire a lock on the same record\nthen it will result in the below error.","position":{"start":{"line":68,"column":41,"offset":2910},"end":{"line":73,"column":40,"offset":3194}}}],"position":{"start":{"line":65,"column":1,"offset":2684},"end":{"line":73,"column":40,"offset":3194}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">TRANSACTION</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.9</span>ms<span class=\"token punctuation\">)</span>  <span class=\"token constant\">ROLLBACK</span>\n<span class=\"token operator\">/</span><span class=\"token constant\">Users</span><span class=\"token regex\">/murtazabagwala/</span><span class=\"token punctuation\">.</span>rvm<span class=\"token operator\">/</span>gems<span class=\"token operator\">/</span>ruby<span class=\"token operator\">-</span><span class=\"token number\">3.0</span><span class=\"token number\">.1</span><span class=\"token operator\">/</span>gems<span class=\"token operator\">/</span>activerecord<span class=\"token operator\">-</span><span class=\"token number\">6.1</span><span class=\"token number\">.4</span><span class=\"token number\">.1</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>active_record<span class=\"token operator\">/</span>connection_adapters<span class=\"token operator\">/</span>postgresql_adapter<span class=\"token punctuation\">.</span>rb<span class=\"token punctuation\">:</span><span class=\"token number\">672</span><span class=\"token symbol\">:in</span> `exec_params'<span class=\"token punctuation\">:</span> <span class=\"token constant\">PG</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">LockNotAvailable</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">ERROR</span><span class=\"token punctuation\">:</span>  could <span class=\"token keyword\">not</span> obtain lock on row <span class=\"token keyword\">in</span> relation <span class=\"token string\">\"articles\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">LockWaitTimeout</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">/</span><span class=\"token constant\">Users</span><span class=\"token regex\">/murtazabagwala/</span><span class=\"token punctuation\">.</span>rvm<span class=\"token operator\">/</span>gems<span class=\"token operator\">/</span>ruby<span class=\"token operator\">-</span><span class=\"token number\">3.0</span><span class=\"token number\">.1</span><span class=\"token operator\">/</span>gems<span class=\"token operator\">/</span>activerecord<span class=\"token operator\">-</span><span class=\"token number\">6.1</span><span class=\"token number\">.4</span><span class=\"token number\">.1</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>active_record<span class=\"token operator\">/</span>connection_adapters<span class=\"token operator\">/</span>postgresql_adapter<span class=\"token punctuation\">.</span>rb<span class=\"token punctuation\">:</span><span class=\"token number\">672</span><span class=\"token symbol\">:in</span> `exec_params'<span class=\"token punctuation\">:</span> <span class=\"token constant\">ERROR</span><span class=\"token punctuation\">:</span>  could <span class=\"token keyword\">not</span> obtain lock on row <span class=\"token keyword\">in</span> relation <span class=\"token string\">\"articles\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">PG</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">LockNotAvailable</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":75,"column":1,"offset":3196},"end":{"line":81,"column":4,"offset":3738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"with_lock","position":{"start":{"line":84,"column":3,"offset":3743},"end":{"line":84,"column":12,"offset":3752}}}],"position":{"start":{"line":84,"column":1,"offset":3741},"end":{"line":84,"column":14,"offset":3754}}}],"position":{"start":{"line":84,"column":1,"offset":3741},"end":{"line":84,"column":14,"offset":3754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can make it more concise using ","position":{"start":{"line":86,"column":1,"offset":3756},"end":{"line":86,"column":35,"offset":3790}}},{"type":"raw","value":"<code class=\"language-text\">with_lock</code>","position":{"start":{"line":86,"column":35,"offset":3790},"end":{"line":86,"column":46,"offset":3801}}},{"type":"text","value":".\n","position":{"start":{"line":86,"column":46,"offset":3801},"end":{"line":87,"column":1,"offset":3804}}},{"type":"raw","value":"<code class=\"language-text\">with_lock</code>","position":{"start":{"line":87,"column":1,"offset":3804},"end":{"line":87,"column":12,"offset":3815}}},{"type":"text","value":" does the same thing it creates a transaction\nand applies a lock on the record under the hood.","position":{"start":{"line":87,"column":12,"offset":3815},"end":{"line":88,"column":49,"offset":3910}}}],"position":{"start":{"line":86,"column":1,"offset":3756},"end":{"line":88,"column":49,"offset":3910}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">  article <span class=\"token operator\">=</span> <span class=\"token constant\">Article</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"00000000-0000-0000-0000-000000000001\"</span><span class=\"token punctuation\">)</span>\n  article<span class=\"token punctuation\">.</span>with_lock<span class=\"token punctuation\">(</span><span class=\"token string\">\"FOR UPDATE NOWAIT\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n    article<span class=\"token punctuation\">.</span>like_count <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    article<span class=\"token punctuation\">.</span>save<span class=\"token operator\">!</span> \n  <span class=\"token keyword\">end</span></code></pre></div>","position":{"start":{"line":90,"column":1,"offset":3912},"end":{"line":96,"column":4,"offset":4085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But, before Rails 7\nthere was no way to specify transaction arguments like\n","position":{"start":{"line":98,"column":1,"offset":4087},"end":{"line":100,"column":1,"offset":4164}}},{"type":"raw","value":"<code class=\"language-text\">isolation</code>","position":{"start":{"line":100,"column":1,"offset":4164},"end":{"line":100,"column":12,"offset":4175}}},{"type":"text","value":", ","position":{"start":{"line":100,"column":12,"offset":4175},"end":{"line":100,"column":14,"offset":4177}}},{"type":"raw","value":"<code class=\"language-text\">requires_new</code>","position":{"start":{"line":100,"column":14,"offset":4177},"end":{"line":100,"column":28,"offset":4191}}},{"type":"text","value":" and ","position":{"start":{"line":100,"column":28,"offset":4191},"end":{"line":100,"column":33,"offset":4196}}},{"type":"raw","value":"<code class=\"language-text\">joinable</code>","position":{"start":{"line":100,"column":33,"offset":4196},"end":{"line":100,"column":43,"offset":4206}}},{"type":"text","value":" to ","position":{"start":{"line":100,"column":43,"offset":4206},"end":{"line":100,"column":47,"offset":4210}}},{"type":"raw","value":"<code class=\"language-text\">with_lock</code>","position":{"start":{"line":100,"column":47,"offset":4210},"end":{"line":100,"column":58,"offset":4221}}},{"type":"text","value":"\nso, for example before Rails 7\nif we had to create the nested transactions\nwe had to use multiple transaction blocks with ","position":{"start":{"line":100,"column":58,"offset":4221},"end":{"line":103,"column":48,"offset":4347}}},{"type":"raw","value":"<code class=\"language-text\">lock!</code>","position":{"start":{"line":103,"column":48,"offset":4347},"end":{"line":103,"column":55,"offset":4354}}},{"type":"text","value":".","position":{"start":{"line":103,"column":55,"offset":4354},"end":{"line":103,"column":56,"offset":4355}}}],"position":{"start":{"line":98,"column":1,"offset":4087},"end":{"line":103,"column":56,"offset":4355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"before","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#before","aria-label":"before permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Before","position":{"start":{"line":105,"column":6,"offset":4362},"end":{"line":105,"column":12,"offset":4368}}}],"position":{"start":{"line":105,"column":1,"offset":4357},"end":{"line":105,"column":13,"offset":4369}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">  <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span><span class=\"token punctuation\">.</span>transaction <span class=\"token keyword\">do</span>\n    article <span class=\"token operator\">=</span> <span class=\"token constant\">Article</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"00000000-0000-0000-0000-000000000001\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lock<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FOR UPDATE NOWAIT\"</span><span class=\"token punctuation\">)</span>\n    article<span class=\"token punctuation\">.</span>like_count <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    article<span class=\"token punctuation\">.</span>save<span class=\"token operator\">!</span> \n\n    <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span><span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">(</span>requires_new<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n      author <span class=\"token operator\">=</span> article<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>lock<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FOR UPDATE NOWAIT\"</span><span class=\"token punctuation\">)</span>\n      author<span class=\"token punctuation\">.</span>articles_liked <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      author<span class=\"token punctuation\">.</span>save<span class=\"token operator\">!</span> \n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span></code></pre></div>","position":{"start":{"line":107,"column":1,"offset":4371},"end":{"line":121,"column":4,"offset":4744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"after","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#after","aria-label":"after permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"After","position":{"start":{"line":123,"column":6,"offset":4751},"end":{"line":123,"column":11,"offset":4756}}}],"position":{"start":{"line":123,"column":1,"offset":4746},"end":{"line":123,"column":12,"offset":4757}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After Rails 7 we can use ","position":{"start":{"line":125,"column":1,"offset":4759},"end":{"line":125,"column":26,"offset":4784}}},{"type":"raw","value":"<code class=\"language-text\">with_lock</code>","position":{"start":{"line":125,"column":26,"offset":4784},"end":{"line":125,"column":37,"offset":4795}}},{"type":"text","value":" to create nested transactions\nand can specify transaction optional arguments like:-","position":{"start":{"line":125,"column":37,"offset":4795},"end":{"line":126,"column":54,"offset":4880}}}],"position":{"start":{"line":125,"column":1,"offset":4759},"end":{"line":126,"column":54,"offset":4880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">requires_new</code>","position":{"start":{"line":128,"column":3,"offset":4884},"end":{"line":128,"column":17,"offset":4898}}},{"type":"text","value":": If this is set to ","position":{"start":{"line":128,"column":17,"offset":4898},"end":{"line":128,"column":37,"offset":4918}}},{"type":"raw","value":"<code class=\"language-text\">true</code>","position":{"start":{"line":128,"column":37,"offset":4918},"end":{"line":128,"column":43,"offset":4924}}},{"type":"text","value":" then the block will be wrapped in a database savepoint acting as a sub-transaction.","position":{"start":{"line":128,"column":43,"offset":4924},"end":{"line":128,"column":127,"offset":5008}}}],"position":{"start":{"line":128,"column":1,"offset":4882},"end":{"line":128,"column":127,"offset":5008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">isolation</code>","position":{"start":{"line":129,"column":3,"offset":5011},"end":{"line":129,"column":14,"offset":5022}}},{"type":"text","value":": We can specify the ","position":{"start":{"line":129,"column":14,"offset":5022},"end":{"line":129,"column":35,"offset":5043}}},{"type":"element","tagName":"a","properties":{"href":"https://www.postgresql.org/docs/current/transaction-iso.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"Isolation Levels","position":{"start":{"line":129,"column":36,"offset":5044},"end":{"line":129,"column":52,"offset":5060}}}],"position":{"start":{"line":129,"column":35,"offset":5043},"end":{"line":129,"column":115,"offset":5123}}},{"type":"text","value":" to avoid dirty reads.","position":{"start":{"line":129,"column":115,"offset":5123},"end":{"line":129,"column":137,"offset":5145}}}],"position":{"start":{"line":129,"column":1,"offset":5009},"end":{"line":129,"column":137,"offset":5145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">joinable</code>","position":{"start":{"line":130,"column":3,"offset":5148},"end":{"line":130,"column":13,"offset":5158}}},{"type":"text","value":": This can be set to ","position":{"start":{"line":130,"column":13,"offset":5158},"end":{"line":130,"column":34,"offset":5179}}},{"type":"raw","value":"<code class=\"language-text\">false</code>","position":{"start":{"line":130,"column":34,"offset":5179},"end":{"line":130,"column":41,"offset":5186}}},{"type":"text","value":" to avoid ","position":{"start":{"line":130,"column":41,"offset":5186},"end":{"line":130,"column":51,"offset":5196}}},{"type":"element","tagName":"a","properties":{"href":"https://makandracards.com/makandra/42885-nested-activerecord-transaction-pitfalls","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"surprises while dealing with custom nested transactions","position":{"start":{"line":130,"column":52,"offset":5197},"end":{"line":130,"column":107,"offset":5252}}}],"position":{"start":{"line":130,"column":51,"offset":5196},"end":{"line":130,"column":191,"offset":5336}}}],"position":{"start":{"line":130,"column":1,"offset":5146},"end":{"line":130,"column":191,"offset":5336}}},{"type":"text","value":"\n"}],"position":{"start":{"line":128,"column":1,"offset":4882},"end":{"line":130,"column":191,"offset":5336}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">  article <span class=\"token operator\">=</span> <span class=\"token constant\">Article</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"00000000-0000-0000-0000-000000000001\"</span><span class=\"token punctuation\">)</span>\n\n  article<span class=\"token punctuation\">.</span>with_lock <span class=\"token keyword\">do</span>\n    author <span class=\"token operator\">=</span> article<span class=\"token punctuation\">.</span>author\n    article<span class=\"token punctuation\">.</span>like_count <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    article<span class=\"token punctuation\">.</span>save<span class=\"token operator\">!</span> \n\n    <span class=\"token comment\"># Will create a new transaction called sub-transaction/savepoint.</span>\n    <span class=\"token comment\"># And, in case of error it will rollback to this savepoint and will not rollback parent transaction</span>\n\n    author<span class=\"token punctuation\">.</span>with_lock<span class=\"token punctuation\">(</span><span class=\"token string\">\"FOR UPDATE NOWAIT\"</span><span class=\"token punctuation\">,</span> requires_new<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n      author<span class=\"token punctuation\">.</span>articles_liked <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      author<span class=\"token punctuation\">.</span>save<span class=\"token operator\">!</span> \n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span></code></pre></div>","position":{"start":{"line":132,"column":1,"offset":5338},"end":{"line":150,"column":4,"offset":5823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please ","position":{"start":{"line":152,"column":1,"offset":5826},"end":{"line":152,"column":8,"offset":5833}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/rails/rails/pull/43224","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"refer to this PR","position":{"start":{"line":152,"column":9,"offset":5834},"end":{"line":152,"column":25,"offset":5850}}}],"position":{"start":{"line":152,"column":8,"offset":5833},"end":{"line":152,"column":69,"offset":5894}}},{"type":"text","value":".","position":{"start":{"line":152,"column":69,"offset":5894},"end":{"line":152,"column":70,"offset":5895}}}],"position":{"start":{"line":152,"column":1,"offset":5826},"end":{"line":152,"column":70,"offset":5895}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":153,"column":1,"offset":5896}}}}