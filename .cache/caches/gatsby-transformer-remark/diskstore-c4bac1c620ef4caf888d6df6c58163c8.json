{"expireTime":9007200918145490000,"key":"transformer-remark-markdown-html-a306cb70da6c8489c19bbb7412328f75-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":"<p>Since beginning my career, I have had a chance to work on some of the great Products.</p>\n<h2 id=\"inflight\" style=\"position:relative;\"><a href=\"#inflight\" aria-label=\"inflight permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inflight</h2>\n<p>It is a software application, running on a ground-based computer, that communicates with UAV via wireless telemetry. It displays real-time data on the UAVs performance and position and can serve as a “virtual cockpit”, showing many of the same instruments that you would have if you were flying a real plane. It is used to control a UAV in flight, uploading new mission commands, setting parameters, playing back the recorded telemetry logs and caching a map.</p>\n<p>Roles and Responsibilities :-</p>\n<ul>\n<li>Gained knowledge of Unmanned Aerial Vehicles(UAV) namely PIXHawks, Lancasters, Fixed Wings, Quad-copters and Multi-roters. Specially, their working and assembly.</li>\n<li>Gained complete knowledge of Mavlink Protocol used to communicate GCS with UAVs</li>\n<li>Implemented various Custom Mavlink messages along with Sliding window Protocol.</li>\n<li>Single handedly built and shipped the Project.</li>\n<li>Created Telemetry Log system which helps to recover the logs in case of Drone gets crashed.</li>\n</ul>\n<p><strong>Tech Stack</strong> - Java 8, JavaFX, Mapbox, Jenkins.</p>\n<h2 id=\"tournament-scheduling-app\" style=\"position:relative;\"><a href=\"#tournament-scheduling-app\" aria-label=\"tournament scheduling app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tournament Scheduling App</h2>\n<p>Created a scheduling algorithm for Bracket and Round Robin tournaments.</p>\n<p><strong>Tech Stack</strong> - Rails, React, Postgres.</p>\n<h2 id=\"trivia-app\" style=\"position:relative;\"><a href=\"#trivia-app\" aria-label=\"trivia app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Trivia App</h2>\n<p>It was a quiz app, designed for CSGO online gaming platform so, before each round it publishes a question fox example <strong><em>Who is gonna win this round</em></strong> and people would answer it so before next round starts we needed to calculate the leaderboard and scores for each of the user. I had built <a href=\"\">scoring and leaderboard engine</a> for the same using self balance binary searc tree(SBBST). Detailed design is mentioned <a href=\"\">here</a>.</p>\n<p><strong>Tech Stack</strong> - NodeJS, React, Postgres, Aerospike.</p>\n<h2 id=\"dating-app\" style=\"position:relative;\"><a href=\"#dating-app\" aria-label=\"dating app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dating App</h2>\n<p>It was a dating app similar to tinder but having 4 swipes instead of 2 was its USP so on User Card it shows Compatibilty Factor which is basically a percentage tells you how compatible you could be with the other user. So, in order to calculate that I used logisctic regression.</p>\n<p><strong>Tech Stack</strong> - NodeJS, Expo React Native, Postgres, GraphQL.</p>\n<h2 id=\"scheduling-algorithm-for-disaster-recovery-service-provider\" style=\"position:relative;\"><a href=\"#scheduling-algorithm-for-disaster-recovery-service-provider\" aria-label=\"scheduling algorithm for disaster recovery service provider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scheduling algorithm for Disaster Recovery Service Provider</h2>\n<p>It was a dating app similar to tinder but having 4 swipes instead of 2 was its USP so on User Card it shows Compatibilty Factor which is basically a percentage tells you how compatible you could be with the other user. So, in order to calculate that I used logisctic regression.</p>\n<p><strong>Tech Stack</strong> - Java 8, Spring Boot, Jenkins.</p>\n<h2 id=\"media-app\" style=\"position:relative;\"><a href=\"#media-app\" aria-label=\"media app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Media App</h2>\n<p>Working on news/content discovery app, which aggregates news and media from trusworthy sources, summarizes them and present it to the user(RoR/React)</p>\n<ul>\n<li><a href=\"\">Implemeted content based filtering using AWS Personalize</a>. </li>\n<li><a href=\"\">Deployed rollback strategies using kubernetes</a>. </li>\n<li>Implemented recommendation algorithm.</li>\n</ul>\n<p><strong>Tech Stack</strong> - Rails, React, Postgres, Kubernetes.</p>\n<p>Tech Stack:- (RoR/React/MySQL/Docker)</p>\n<h4 id=\"roles-and-responsibilities\" style=\"position:relative;\"><a href=\"#roles-and-responsibilities\" aria-label=\"roles and responsibilities permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Roles and Responsibilities</h4>\n<ol>\n<li>Gained knowledge of Unmanned Aerial Vehicles(UAV) namely PIXHawks, Lancasters, Fixed Wings, Quad-copters and Multi-roters. Specially, their working and assembly.</li>\n<li>Gained complete knowledge of Mavlink Protocol used to communicate GCS with UAVs</li>\n<li>Implemented various Custom Mavlink messages</li>\n<li>Single handedly built and shipped the Project.</li>\n</ol>\n<h4 id=\"dont-use-unless-code-shared-across-code-bases\" style=\"position:relative;\"><a href=\"#dont-use-unless-code-shared-across-code-bases\" aria-label=\"dont use unless code shared across code bases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Don’t use unless code shared across code bases</h4>\n<p>There is no point to use Engines unless we are planning to share them between the projects.\nEngines add little meaningful encapsulations to the architecture\nand are just a way to mix one Rails project into another.\nThis is useful if we are planning to release the next Devise as a gem.\nBut also, having a gem as a critical part of our project is also a royal pain,\nbecause it is by definition harder to change than the rest of the project\nso, we can always try with Ruby modules or libs first.</p>\n<h4 id=\"harder-to-test-engine-code\" style=\"position:relative;\"><a href=\"#harder-to-test-engine-code\" aria-label=\"harder to test engine code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Harder to test engine code</h4>\n<p>Engines make TDD almost impossible.\nThe engine needs it’s own full fake Rails app\nand database to live in to run any tests,\nwhich is an overhead to impose on any project’s development team.</p>\n<p>To write engine tests that depend on main app models\nwe need to generate main app models inside the <code class=\"language-text\">test/dummy</code> directory defined in the engine\nand need to mount the engine on this dummy app as mentioned in\n<a href=\"https://guides.rubyonrails.org/engines.html#testing-an-engine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">docs</a>.</p>\n<h4 id=\"less-cohesion-and-coupled-to-app-code\" style=\"position:relative;\"><a href=\"#less-cohesion-and-coupled-to-app-code\" aria-label=\"less cohesion and coupled to app code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Less cohesion and coupled to app code</h4>\n<p>The idea of cohesion is to have applications that can evolve independently\nwhich means if we change one component then we don’t need to change another\nbut it is not true in the case of engines,\nfor example, our blog engine finds a user by <code class=\"language-text\">name</code>\nand what if we rename a <code class=\"language-text\">name</code> attribute to <code class=\"language-text\">username</code>,\nwe will need to update the engine code to use this new attribute.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  module Engine\n    class Post &lt; ActiveRecord::Base\n      attr_accessor :author_name\n      belongs_to :author, class_name: \"User\"\n\n      before_validation :set_author\n\n      private\n        def set_author\n            self.author = User.find_or_create_by(name: author_name)\n        end\n    end\n  end  </code></pre></div>\n<p>These issues occur because we generally don’t have a\n<a href=\"https://martinfowler.com/bliki/BoundedContext.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bounded Context</a>\ndefined between our application and engines.</p>\n<p>Also, the engine and app is using the same database.\nBy creating an interface separate from our data storage,\nwe smooth the road toward having a fully decoupled service with its own data store.\nFurthermore, we explicitly define the interactions with the data and behavior within the engine,\nrather than using the database as an interface.</p>\n<h4 id=\"unnecessary-code-and-dependencies\" style=\"position:relative;\"><a href=\"#unnecessary-code-and-dependencies\" aria-label=\"unnecessary code and dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unnecessary code and dependencies</h4>\n<p>There is unnecessary and redundant code that gets checked into VCS\nbecause the engine has its own app directory along with the <code class=\"language-text\">.gemspec</code> file.\nSo with the main app, we also need to take care of the engines to clean up the unnecessary code\nand dependencies.</p>\n<h4 id=\"multiple-configs-and-gemfiles\" style=\"position:relative;\"><a href=\"#multiple-configs-and-gemfiles\" aria-label=\"multiple configs and gemfiles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multiple configs and gemfiles.</h4>\n<p>While using engines we need to deal with creating separate configurations for the main app\nand engines and that could result in some subtle serious issues.</p>\n<p>Engines define dependencies with a <code class=\"language-text\">.gemspec</code>, not a <code class=\"language-text\">Gemfile</code>,\nmeaning our gems need to be available on a gem server like RubyGems\nand can’t be loaded directly from GitHub.\nwe can always use a gem locally,\nbut that’s a hassle.\nwe also need to be careful to use similar versions of dependencies between engines\nand the main app.\nFor example, if our main app is using a Devise 4.0\nand the engine is using Devise 3.0 with different configurations\nthen the engine will not work as expected\nbecause the engine devise will load the configuration from the main app initializer,\nnot from the engine’s initializer.</p>"}