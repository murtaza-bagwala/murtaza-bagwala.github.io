{"expireTime":9007200847401220000,"key":"transformer-remark-markdown-html-130468e0afde9ecc5741cde74df8c2b5-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":"<p><a href=\"https://www.gatsbyjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GatsbyJs</a> is one of the most powerful frameworks which I have come across, It is an amazing framework to build really performant static websites.</p>\n<h2 id=\"why-i-moved-from-jekyll-to-gatsbyjs\" style=\"position:relative;\"><a href=\"#why-i-moved-from-jekyll-to-gatsbyjs\" aria-label=\"why i moved from jekyll to gatsbyjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why I moved from Jekyll to GatsbyJS</h2>\n<p>So, when I thought of creating a blogging website 3 years back, I had various options like going for CMSs or to use the static site generators. I really wanted it to be simple and without any admin interfaces so I used <a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jekyll</a>. Jekyll is a static site generator, lightweight and fast, perfect for building blogging sites`. And, as a developer, it really took a little to learn. And my first blog was up in an hour or so.</p>\n<p>But, as I started writing blogs on Jekyll, I encountered various problems which I want to mention here:-</p>\n<ul>\n<li>Jekyll is a <strong><em>truly static site</em></strong> generator. Every piece of data has to be available at the build time, for example, while writing one of the blogs I had to mentioned the tweet in it. There was no way but to copy the embedded tweet from the twitter feed and adding it in the markdown file.</li>\n<li>In Jekyll, you have separate <code class=\"language-text\">\\_drafts</code> and <code class=\"language-text\">\\_posts</code> directories for storing your work in progress and your completed content pages. While in Gatsby I use just one flag called <code class=\"language-text\">isDraft</code> to achieve the same.</li>\n<li>Working with assets might be a hassle. Minimizing javascript and image preloading does not come with Jekyll.</li>\n</ul>\n<p>There are many more reasons which I haven’t counted here which make Gatsby ahead of other static site generators, but to look out for them <a href=\"https://www.gatsbyjs.org/features/jamstack/gatsby-vs-jekyll-vs-hugo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gatsby has a great comparison table here</a>.</p>\n<h2 id=\"why-gatsbyjs-\" style=\"position:relative;\"><a href=\"#why-gatsbyjs-\" aria-label=\"why gatsbyjs  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why GatsbyJS ?</h2>\n<p>The reasons why I consider Gatsby.js for building my blogging site:-</p>\n<ul>\n<li>\n<p><strong>Great learning experience:-</strong> Gatsby comprised of a cool tech stack which includes <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ReactJS</a>, <a href=\"https://webpackjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Webpack</a>, and <a href=\"https://graphql.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GraphQL</a>, etc. As I have started looking into the React I see everything on a webpage as a reusable component. Gatsby aims to behave like a regular React application and uses its components which you can reuse and share throughout your project. And having this modular component-based style always makes code manageable and inherently optimized.</p>\n<p>Also, I got a chance to look into <strong>GraphQL</strong>. GraphQL is a query language with which you can fetch data from nearly any source. One of its most powerful features is its ability to get only the data you ask for, you decide what you want and need, not the server/source. Therefore, Gatsby doesn’t need a backend, and GraphQL lets you query all necessary data from wherever you want: markdown files, databases, 3rd party feeds, traditional CMSs like Wordpress, and so on. You just specify the query, Gatsby will fetch the data during build time and will create the pages. For example, in my application, I’ve used GraphQL to fetch all the markdown files content for the posts and Gatsby compiles the returned content with the React templates and creates the pages during build time.</p>\n</li>\n<li><strong>Follows JAMStack Inherently:-</strong> So applications developed using Gatsby inherently falls under the category of <a href=\"https://jamstack.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JAMStack</a> architecture where <strong>JAM</strong> stands for JavaScript, APIs, and Markup. I would like to have a separate blog on this topic but, in simple terms, it means the application architecture that doesn’t depend on a Web server.</li>\n<li><strong>Amazingly fast:-</strong> GatsbyJS was built keeping performance in mind. Let’s discuss two key website performance metrics that summarize the most important parts of website performance. How quickly is your website visible (Speed Index) and how quickly is your site usable (Time to Interactive—TTI). So, if you look at here you will notice that most of the popular websites have very high Speed Index( >= 5sec). Below is the snippet of the test result for murtazabagwala.xyz.</li>\n</ul>\n<p><img src=\"/test-performance.png\" alt=\"alt\"></p>\n<p>Gatsby sites are 2-3 times faster than similar types of sites. The framework itself takes care of performance, leaving you with the pleasure of working on something more fun. All you have to do is to create React components, and Gatsby.js will then compile the most performant Webpack configuration to build your site. Additionally, it prefetches resources so clicking through your pages feels excitingly fast. If you want to learn more about how and why the creators of Gatsby are doing this, <a href=\"https://www.gatsbyjs.org/blog/2017-09-13-why-is-gatsby-so-fast/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">you can read more here</a>.</p>\n<ul>\n<li><strong>Easy Deployments:-</strong> Gatsby is really fast in terms of deployments and its really easy to integrate with the CI tools, for example you can deploy your Gatsby site with <a href=\"https://www.gatsbyjs.org/docs/deploying-to-surge/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">surge.sh</a> using just a couple of commands.</li>\n</ul>\n<p>And many more like extensive plugins support, also can be used to build Progressive Web Apps</p>"}