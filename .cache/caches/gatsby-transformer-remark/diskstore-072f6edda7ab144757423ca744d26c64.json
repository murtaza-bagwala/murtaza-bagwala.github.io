{"expireTime":9007200894070216000,"key":"transformer-remark-markdown-html-4e6ff786f38a43231f08211374c17d04-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":"<p>We often hear <strong><em>Cache invalidation is a hard problem in computer science and could cause bugs</em></strong>\nbut sometimes, caching something that should not be cached is a potential source of bugs\nand security vulnerabilities.\nRails has a built-in mechanism for <a href=\"https://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fragment Caching</a>,\nwhich stores part of the rendered view as a fragment.\nFor subsequent requests, the pre-saved fragment is used instead of rendering it again.</p>\n<p>But this could cause some serious bugs\nfor example, we could have an s3 URL helper which generates a unique presigned URL\nfor each of the product\nor one could write a form helper that outputs a request-specific auth token,\nin such cases, it is better to avoid Fragment Caching.</p>\n<h3 id=\"before\" style=\"position:relative;\"><a href=\"#before\" aria-label=\"before permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Before</h3>\n<p>Using the <code class=\"language-text\">cache</code> helper we can implement fragment caching.</p>\n<p><strong>views/products/index.html.erb</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascrit\"><pre class=\"language-javascrit\"><code class=\"language-javascrit\">  &lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n        &lt;th&gt;Title&lt;/th&gt;\n        &lt;th&gt;Description&lt;/th&gt;\n        &lt;th&gt;Image&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n\n    &lt;tbody&gt;\n        &lt;% @products.each do |product| %&gt;\n          &lt;% cache(product) do %&gt;\n              &lt;%= render product %&gt;\n          &lt;% end %&gt;\n        &lt;% end %&gt;\n    &lt;/tbody&gt;\n  &lt;/table&gt;\n{% endhighlight %}  \n\n**views/products/_product.html.erb**\n\n{% highlight ruby %}\n  &lt;tr&gt;\n    &lt;td&gt;&lt;%= product.title %&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;%= product.description %&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;%= image_tag(generate_presigned_url(product.image_url)) %&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n{% endhighlight %}\n\nBut, here is a bug because, \nwe get a cached version of the product each time we are rendering the products \nthough, we are generating the unique presigned URL each time. \nTo resolve the above issue,\nwe need to include `cacheable` in the Product partial \nso that if someone tries to cache the product partial it would throw an `ActionView::Template::Error`.\n\n### After\n\n{% highlight ruby %}\n  &lt;tr&gt;\n    &lt;%= uncacheable! %&gt;\n    &lt;td&gt;&lt;%= product.title %&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;%= product.description %&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;%= image_tag(generate_presigned_url(product.image_url)) %&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n{% endhighlight %}\n\nwhich would result in\n\n{% highlight ruby %}</code></pre></div>\n<p>  ActionView::Template::Error (canâ€™t be fragment cached):\n1: <tr>\n2:     &#x3C;%= uncacheable! %>\n3:   <td>&#x3C;%= product.title %></td>\n4:   <td>&#x3C;%= product.description %></td>\n5:   <td>&#x3C;%= image<em>tag(generate</em>presigned<em>url(product.image</em>url)) %></td></p>\n<p>  app/views/products/_product.html.erb:2</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{% endhighlight %}\n\n\nwe can also use the `caching?` helper to check whether the current code path is being cached \nor to enforce caching.\n\n{% highlight ruby %}\n  &lt;tr&gt;\n    &lt;%= raise Exception.new &quot;This partial needs to be cached&quot; unless caching? %&gt;\n    &lt;td&gt;&lt;%= product.title %&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;%= product.description %&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n{% endhighlight %}\n\nFor more discussion related to this change,\nplease refer to this\n[PR](https://github.com/rails/rails/pull/42365).</code></pre></div>"}