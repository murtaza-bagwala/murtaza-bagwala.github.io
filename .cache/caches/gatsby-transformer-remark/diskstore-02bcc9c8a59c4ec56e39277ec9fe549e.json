{"expireTime":9007200911358258000,"key":"transformer-remark-markdown-ast-5f7485db87c536126879152769fd750f-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://blog.saeloun.com/2020/02/14/rails-6-multiple-database-support.html","children":[{"type":"text","value":"Rails 6","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":9,"offset":9},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":86,"offset":86},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" \nhad added the support for multiple database connections \nusing which we can configure the separate databases for reads and writes. ","position":{"start":{"line":2,"column":86,"offset":86},"end":{"line":4,"column":75,"offset":219},"indent":[1,1]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":75,"offset":219},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For example, we have two databases ","position":{"start":{"line":6,"column":1,"offset":221},"end":{"line":6,"column":36,"offset":256},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">write_database</code>","position":{"start":{"line":6,"column":36,"offset":256},"end":{"line":6,"column":52,"offset":272},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":6,"column":52,"offset":272},"end":{"line":6,"column":57,"offset":277},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">read_database</code>","position":{"start":{"line":6,"column":57,"offset":277},"end":{"line":6,"column":72,"offset":292},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":6,"column":72,"offset":292},"end":{"line":6,"column":73,"offset":293},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":221},"end":{"line":6,"column":73,"offset":293},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  /config/database.yml\n\n  default: &amp;default\n    adapter: postgresql\n    encoding: unicode\n    host: &lt;%= ENV[&#39;PG_HOST&#39;] || &#39;localhost&#39; %&gt;\n    pool: 5\n    username: &lt;%= ENV[&#39;PG_USER&#39;] || &#39;postgres&#39; %&gt;\n    password: &lt;%= ENV[&#39;PG_PASSWORD&#39;] || &#39;postgres&#39; %&gt;\n\n  development:\n    write_database:\n      &lt;&lt;: *default\n      database: &lt;%= &quot;write_database&quot; %&gt;\n\n    read_database:\n      &lt;&lt;: *default\n      database: &lt;%= &quot;read_database&quot; %&gt;</code></pre></div>","position":{"start":{"line":8,"column":1,"offset":295},"end":{"line":29,"column":4,"offset":730},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now to use the above-defined databases, \nwe need to set up the Active Record model.","position":{"start":{"line":31,"column":1,"offset":732},"end":{"line":32,"column":43,"offset":815},"indent":[1]}}],"position":{"start":{"line":31,"column":1,"offset":732},"end":{"line":32,"column":43,"offset":815},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  app/models/application_record.rb\n\n  class ApplicationRecord &lt; ActiveRecord::Base\n    self.abstract_class = true\n    connects_to database: { writing: :write_database, reading: :read_database }\n  end\n\n  app/models/product.rb\n\n  class Product &lt; ApplicationRecord\n    validates :name, presence: true\n    validates :description, presence: true\n  end</code></pre></div>","position":{"start":{"line":34,"column":1,"offset":817},"end":{"line":50,"column":4,"offset":1173},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And to enable the automatic switching between the databases \nbased on the HTTP Verb we need to add the below configuration. ","position":{"start":{"line":52,"column":1,"offset":1175},"end":{"line":53,"column":64,"offset":1299},"indent":[1]}}],"position":{"start":{"line":52,"column":1,"offset":1175},"end":{"line":53,"column":64,"offset":1299},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  config/application.rb\n\n  module MultiDBApp\n    class Application &lt; Rails::Application\n      config.active_record.database_selector = { delay: 2.seconds }\n      config.active_record.database_resolver = ActiveRecord::Middleware::DatabaseSelector::Resolver\n      config.active_record.database_resolver_context = ActiveRecord::Middleware::DatabaseSelector::Resolver::Session\n    end\n  end</code></pre></div>","position":{"start":{"line":55,"column":1,"offset":1301},"end":{"line":67,"column":4,"offset":1697},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using the above configuration \nRails looks for the ","position":{"start":{"line":69,"column":1,"offset":1699},"end":{"line":70,"column":21,"offset":1750},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">reading_request?</code>","position":{"start":{"line":70,"column":21,"offset":1750},"end":{"line":70,"column":39,"offset":1768},"indent":[]}},{"type":"text","value":" method \ndefined in the middleware ","position":{"start":{"line":70,"column":39,"offset":1768},"end":{"line":71,"column":27,"offset":1803},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">ActiveRecord::Middleware::Middleware::DatabaseSelector</code>","position":{"start":{"line":71,"column":27,"offset":1803},"end":{"line":71,"column":83,"offset":1859},"indent":[]}},{"type":"text","value":", \nits default implementation is true for GET and HEAD requests, \nwhich means for POST, PUT, DELETE, or PATCH request \nthe application will automatically write to the ","position":{"start":{"line":71,"column":83,"offset":1859},"end":{"line":74,"column":49,"offset":2026},"indent":[1,1,1]}},{"type":"html","value":"<code class=\"language-text\">write_database</code>","position":{"start":{"line":74,"column":49,"offset":2026},"end":{"line":74,"column":65,"offset":2042},"indent":[]}},{"type":"text","value":" \nand for read, it will use ","position":{"start":{"line":74,"column":65,"offset":2042},"end":{"line":75,"column":27,"offset":2070},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">read_database</code>","position":{"start":{"line":75,"column":27,"offset":2070},"end":{"line":75,"column":42,"offset":2085},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":75,"column":42,"offset":2085},"end":{"line":75,"column":43,"offset":2086},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1699},"end":{"line":75,"column":43,"offset":2086},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:- According to the \n","position":{"start":{"line":77,"column":3,"offset":2090},"end":{"line":78,"column":1,"offset":2115},"indent":[1]}},{"type":"link","title":null,"url":"https://guides.rubyonrails.org/active_record_multiple_databases.html#activating-automatic-role-switching","children":[{"type":"text","value":"docs","position":{"start":{"line":78,"column":2,"offset":2116},"end":{"line":78,"column":6,"offset":2120},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2115},"end":{"line":78,"column":113,"offset":2227},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" \nwe are supposed to add the above configuration in \ninitializers(/config/initializers/multi_db.rb) \nbut this is broken in Rails latest release so as suggested here in the \n","position":{"start":{"line":78,"column":113,"offset":2227},"end":{"line":82,"column":1,"offset":2400},"indent":[1,1,1,1]}},{"type":"link","title":null,"url":"https://github.com/rails/rails/issues/45162#issuecomment-1135072689","children":[{"type":"text","value":"Rails issue","position":{"start":{"line":82,"column":2,"offset":2401},"end":{"line":82,"column":13,"offset":2412},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2400},"end":{"line":82,"column":83,"offset":2482},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":", \nwe need to add the config in ","position":{"start":{"line":82,"column":83,"offset":2482},"end":{"line":83,"column":30,"offset":2514},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">application.rb</code>","position":{"start":{"line":83,"column":30,"offset":2514},"end":{"line":83,"column":46,"offset":2530},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2088},"end":{"line":83,"column":48,"offset":2532},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":77,"column":1,"offset":2088},"end":{"line":83,"column":48,"offset":2532},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#before","title":null,"children":[],"data":{"hProperties":{"aria-label":"before permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Before","position":{"start":{"line":85,"column":6,"offset":2539},"end":{"line":85,"column":12,"offset":2545},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2534},"end":{"line":85,"column":12,"offset":2545},"indent":[]},"data":{"id":"before","htmlAttributes":{"id":"before"},"hProperties":{"id":"before","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Let us call a ","position":{"start":{"line":87,"column":1,"offset":2547},"end":{"line":87,"column":15,"offset":2561},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">create_product</code>","position":{"start":{"line":87,"column":15,"offset":2561},"end":{"line":87,"column":31,"offset":2577},"indent":[]}},{"type":"text","value":"(POST) API to create a Product.","position":{"start":{"line":87,"column":31,"offset":2577},"end":{"line":87,"column":62,"offset":2608},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2547},"end":{"line":87,"column":62,"offset":2608},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  POST:- http://localhost:3000/products\n\n  Body:- { name: &quot;Detergent&quot;, description: &quot;A mixture of surfactants with cleansing properties&quot; }\n\n  Response:- \n  \n  {\n    &quot;id&quot;: 1,\n    &quot;name&quot;: &quot;Detergent&quot;,\n    &quot;description&quot;: &quot;A mixture of surfactants with cleansing properties&quot;,\n    &quot;created_at&quot;: &quot;2022-06-14T06:25:25.877Z&quot;,\n    &quot;updated_at&quot;: &quot;2022-06-14T06:25:25.877Z&quot;\n  }</code></pre></div>","position":{"start":{"line":89,"column":1,"offset":2610},"end":{"line":105,"column":4,"offset":2986},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So, as expected, the product is created successfully in ","position":{"start":{"line":107,"column":1,"offset":2988},"end":{"line":107,"column":57,"offset":3044},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">write_database</code>","position":{"start":{"line":107,"column":57,"offset":3044},"end":{"line":107,"column":73,"offset":3060},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":107,"column":73,"offset":3060},"end":{"line":107,"column":74,"offset":3061},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2988},"end":{"line":107,"column":74,"offset":3061},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we call a ","position":{"start":{"line":109,"column":1,"offset":3063},"end":{"line":109,"column":14,"offset":3076},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">get_product</code>","position":{"start":{"line":109,"column":14,"offset":3076},"end":{"line":109,"column":27,"offset":3089},"indent":[]}},{"type":"text","value":"(GET) API, \nit says product not found because, \nthe GET request will be redirected to ","position":{"start":{"line":109,"column":27,"offset":3089},"end":{"line":111,"column":39,"offset":3175},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">read_database</code>","position":{"start":{"line":111,"column":39,"offset":3175},"end":{"line":111,"column":54,"offset":3190},"indent":[]}},{"type":"text","value":", \nand that does not have a Product that we created recently.","position":{"start":{"line":111,"column":54,"offset":3190},"end":{"line":112,"column":59,"offset":3251},"indent":[1]}}],"position":{"start":{"line":109,"column":1,"offset":3063},"end":{"line":112,"column":59,"offset":3251},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  GET:- http://localhost:3000/products/1\n\n  Response:-\n  \n  {\n    &quot;error&quot;: &quot;product with id 1 not found&quot;\n  }</code></pre></div>","position":{"start":{"line":114,"column":1,"offset":3253},"end":{"line":124,"column":4,"offset":3371},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So, this is working as expected. Now suppose, \nif we call a GraphQL API to read the particular product.","position":{"start":{"line":126,"column":1,"offset":3373},"end":{"line":127,"column":57,"offset":3476},"indent":[1]}}],"position":{"start":{"line":126,"column":1,"offset":3373},"end":{"line":127,"column":57,"offset":3476},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  GraphQL API:-\n  \n  {\n    product(id: 1) {\n      id\n      name\n      description\n    }\n  }\n\n  Response:-\n\n  {\n    &quot;data&quot;: {\n      &quot;product&quot;: {\n        &quot;id&quot;: &quot;1&quot;,\n        &quot;title&quot;: &quot;Detergent&quot;,\n        &quot;description&quot;: &quot;A mixture of surfactants with cleansing properties&quot;\n      }\n    }\n  }</code></pre></div>","position":{"start":{"line":129,"column":1,"offset":3478},"end":{"line":153,"column":4,"offset":3774},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Whoa!!! We get the Product details back, \nideally, it should respond with a ","position":{"start":{"line":155,"column":1,"offset":3776},"end":{"line":156,"column":35,"offset":3852},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">not_found</code>","position":{"start":{"line":156,"column":35,"offset":3852},"end":{"line":156,"column":46,"offset":3863},"indent":[]}},{"type":"text","value":" error \nbecause it is a read request, \nbut GraphQL API uses the POST HTTP method and \naccording to the default implementation POST requests get redirected to the ","position":{"start":{"line":156,"column":46,"offset":3863},"end":{"line":159,"column":77,"offset":4025},"indent":[1,1,1]}},{"type":"html","value":"<code class=\"language-text\">write_database</code>","position":{"start":{"line":159,"column":77,"offset":4025},"end":{"line":159,"column":93,"offset":4041},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":159,"column":93,"offset":4041},"end":{"line":159,"column":94,"offset":4042},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3776},"end":{"line":159,"column":94,"offset":4042},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#after","title":null,"children":[],"data":{"hProperties":{"aria-label":"after permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"After","position":{"start":{"line":161,"column":6,"offset":4049},"end":{"line":161,"column":11,"offset":4054},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4044},"end":{"line":161,"column":11,"offset":4054},"indent":[]},"data":{"id":"after","htmlAttributes":{"id":"after"},"hProperties":{"id":"after","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"To fix this, \nRails has moved ","position":{"start":{"line":163,"column":1,"offset":4056},"end":{"line":164,"column":17,"offset":4086},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">reading_request?</code>","position":{"start":{"line":164,"column":17,"offset":4086},"end":{"line":164,"column":35,"offset":4104},"indent":[]}},{"type":"text","value":" \nmethod from the ","position":{"start":{"line":164,"column":35,"offset":4104},"end":{"line":165,"column":17,"offset":4122},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">ActiveRecord::Middleware::Middleware::DatabaseSelector</code>","position":{"start":{"line":165,"column":17,"offset":4122},"end":{"line":165,"column":73,"offset":4178},"indent":[]}},{"type":"text","value":" \nto the ","position":{"start":{"line":165,"column":73,"offset":4178},"end":{"line":166,"column":8,"offset":4187},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">ActiveRecord::Middleware::DatabaseSelector::Resolver</code>","position":{"start":{"line":166,"column":8,"offset":4187},"end":{"line":166,"column":62,"offset":4241},"indent":[]}},{"type":"text","value":" class, \nso that we can override and create custom Resolver.","position":{"start":{"line":166,"column":62,"offset":4241},"end":{"line":167,"column":52,"offset":4301},"indent":[1]}}],"position":{"start":{"line":163,"column":1,"offset":4056},"end":{"line":167,"column":52,"offset":4301},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Let us create a custom resolver \nand override the ","position":{"start":{"line":169,"column":1,"offset":4303},"end":{"line":170,"column":18,"offset":4353},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">reading_request?</code>","position":{"start":{"line":170,"column":18,"offset":4353},"end":{"line":170,"column":36,"offset":4371},"indent":[]}},{"type":"text","value":" method to add the validations for a GraphQL API.","position":{"start":{"line":170,"column":36,"offset":4371},"end":{"line":170,"column":85,"offset":4420},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":4303},"end":{"line":170,"column":85,"offset":4420},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  class CustomResolver &lt; ActiveRecord::Middleware::DatabaseSelector::Resolver\n    def reading_request?(request)\n      graphql_read = request.post? &amp;&amp; request.path == &quot;/graphql&quot; &amp;&amp; !request.params[:query]&amp;.include?(&quot;mutation&quot;)\n      graphql_read || super\n    end\n  end\n\n  module MultiDBApp\n    class Application &lt; Rails::Application\n      config.load_defaults 7.1\n    \n      config.active_record.database_selector = { delay: 2.seconds }\n      config.active_record.database_resolver = CustomResolver\n      config.active_record.database_resolver_context = ActiveRecord::Middleware::DatabaseSelector::Resolver::Session\n    end\n  end</code></pre></div>","position":{"start":{"line":172,"column":1,"offset":4422},"end":{"line":191,"column":4,"offset":5060},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So, our custom ","position":{"start":{"line":193,"column":1,"offset":5062},"end":{"line":193,"column":16,"offset":5077},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reading_request?</code>","position":{"start":{"line":193,"column":16,"offset":5077},"end":{"line":193,"column":34,"offset":5095},"indent":[]}},{"type":"text","value":" checks if the request is POST, \ntype is GraphQL and params doesn’t have ","position":{"start":{"line":193,"column":34,"offset":5095},"end":{"line":194,"column":41,"offset":5168},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">mutation</code>","position":{"start":{"line":194,"column":41,"offset":5168},"end":{"line":194,"column":51,"offset":5178},"indent":[]}},{"type":"text","value":" \nthen consider it as a read request and redirect it to the ","position":{"start":{"line":194,"column":51,"offset":5178},"end":{"line":195,"column":59,"offset":5238},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">read_database</code>","position":{"start":{"line":195,"column":59,"offset":5238},"end":{"line":195,"column":74,"offset":5253},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":195,"column":74,"offset":5253},"end":{"line":195,"column":75,"offset":5254},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":5062},"end":{"line":195,"column":75,"offset":5254},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, if we call a GraphQL API again to read the particular product.","position":{"start":{"line":197,"column":1,"offset":5256},"end":{"line":197,"column":68,"offset":5323},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":5256},"end":{"line":197,"column":68,"offset":5323},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  GraphQL API:-\n  \n  {\n    product(id: 1) {\n      id\n      name\n      description\n    }\n  }\n\n  Response:-\n\n  {\n    &quot;errors&quot;: [\n      {\n        &quot;message&quot;: &quot;Couldn&#39;t find Product with &#39;id&#39;=1&quot;\n      }\n    ]\n  }</code></pre></div>","position":{"start":{"line":199,"column":1,"offset":5325},"end":{"line":221,"column":4,"offset":5542},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It responds with a ","position":{"start":{"line":223,"column":1,"offset":5544},"end":{"line":223,"column":20,"offset":5563},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">not_found</code>","position":{"start":{"line":223,"column":20,"offset":5563},"end":{"line":223,"column":31,"offset":5574},"indent":[]}},{"type":"text","value":" message, \nwhich is expected because ","position":{"start":{"line":223,"column":31,"offset":5574},"end":{"line":224,"column":27,"offset":5611},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">read_database</code>","position":{"start":{"line":224,"column":27,"offset":5611},"end":{"line":224,"column":42,"offset":5626},"indent":[]}},{"type":"text","value":" doesn’t have a Product record.","position":{"start":{"line":224,"column":42,"offset":5626},"end":{"line":224,"column":73,"offset":5657},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":5544},"end":{"line":224,"column":73,"offset":5657},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note: The enhancement is yet to be released in the official Rails version","position":{"start":{"line":226,"column":3,"offset":5661},"end":{"line":226,"column":76,"offset":5734},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":5659},"end":{"line":226,"column":78,"offset":5736},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":5659},"end":{"line":226,"column":78,"offset":5736},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Check out\n","position":{"start":{"line":228,"column":1,"offset":5738},"end":{"line":229,"column":1,"offset":5748},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/rails/rails/pull/44944","children":[{"type":"text","value":"the PR","position":{"start":{"line":229,"column":2,"offset":5749},"end":{"line":229,"column":8,"offset":5755},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":5748},"end":{"line":229,"column":52,"offset":5799},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\nfor more details.","position":{"start":{"line":229,"column":52,"offset":5799},"end":{"line":230,"column":18,"offset":5817},"indent":[1]}}],"position":{"start":{"line":228,"column":1,"offset":5738},"end":{"line":230,"column":18,"offset":5817},"indent":[1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":231,"column":1,"offset":5818}}}}