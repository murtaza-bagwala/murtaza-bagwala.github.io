{"expireTime":9007200911358258000,"key":"transformer-remark-markdown-html-9f25b71a715d90ad9e538d035fffa5f5-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":"<p>All of us would have used aliases with SQL queries as it makes the table\nand column names more readable.\nThe renaming is just a temporary change\nand the table name does not change in the original database.</p>\n<p>Rails now support aliased attributes with <code class=\"language-text\">insert_all</code>\nand <code class=\"language-text\">upsert_all</code>,\nwhich means we can add aliases in the Active Record model.</p>\n<p>For example,\nhere we are adding an alias <code class=\"language-text\">name</code> to\nthe original <code class=\"language-text\">title</code> attribute of <code class=\"language-text\">Product</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  class Product &lt; ApplicationRecord\n    alias_attribute :name, :title\n  end</code></pre></div>\n<h3 id=\"before\" style=\"position:relative;\"><a href=\"#before\" aria-label=\"before permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Before</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">=&gt; Product.insert_all [{ name: &quot;Detergent&quot;, description: &quot;A mixture of surfactants with cleansing properties&quot; }], returning: :name\n\n=&gt; /Users/murtazabagwala/.rvm/gems/ruby-3.0.2/gems/activerecord-7.0.3/lib/active_record/insert_all.rb:264:in `extract_types_from_columns_on&#39;: unknown attribute &#39;name&#39; for Product. (ActiveModel::UnknownAttributeError)</code></pre></div>\n<p>We can notice,\nit throws an error\nsaying unknown attribute <code class=\"language-text\">name</code>.</p>\n<h3 id=\"after\" style=\"position:relative;\"><a href=\"#after\" aria-label=\"after permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>After</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">=&gt; Product.insert_all [{ name: &quot;Detergent&quot;, description: &quot;A mixture of surfactants with cleansing properties&quot; }], returning: :name\n\nProduct Insert (2.2ms)  INSERT INTO &quot;products&quot; (&quot;title&quot;,&quot;description&quot;,&quot;created_at&quot;,&quot;updated_at&quot;) VALUES (&#39;Detergent&#39;, &#39;A mixture of surfactants with cleansing properties&#39;, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) ON CONFLICT  DO NOTHING RETURNING &quot;title&quot; AS &quot;name&quot;\n\n=&gt; #&lt;ActiveRecord::Result:0x00007f921ae855e0 @column_types={}, @columns=[&quot;name&quot;], @hash_rows=nil, @rows=[[&quot;Detergent&quot;]]&gt; </code></pre></div>\n<p>Aliased attributes also work with <code class=\"language-text\">upsert_all</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">=&gt; Product.upsert_all [{ id: 1, name: &quot;Soap&quot;}]\n\nProduct Upsert (4.7ms)  INSERT INTO &quot;products&quot; (&quot;id&quot;,&quot;title&quot;,&quot;created_at&quot;,&quot;updated_at&quot;) VALUES (1, &#39;Soap&#39;, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) ON CONFLICT (&quot;id&quot;) DO UPDATE SET updated_at=(CASE WHEN (&quot;products&quot;.&quot;title&quot; IS NOT DISTINCT FROM excluded.&quot;title&quot;) THEN &quot;products&quot;.updated_at ELSE CURRENT_TIMESTAMP END),&quot;title&quot;=excluded.&quot;title&quot; RETURNING &quot;id&quot;\n =&gt; #&lt;ActiveRecord::Result:0x00007f92185c5650 @column_types={}, @columns=[&quot;id&quot;], @hash_rows=nil, @rows=[[1]]&gt; </code></pre></div>\n<p>As it can be seen,\nit does not throw an error\nwhile using aliased attributes with <code class=\"language-text\">insert_all</code>\nand <code class=\"language-text\">upsert_all</code>.</p>\n<p><strong>Note: The enhancement is yet to be released in the official Rails version</strong></p>\n<p>Check out\n<a href=\"https://github.com/rails/rails/pull/45036\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the PR</a>\nfor more details.</p>"}