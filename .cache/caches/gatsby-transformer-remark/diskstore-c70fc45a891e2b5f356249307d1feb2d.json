{"expireTime":9007200911358258000,"key":"transformer-remark-markdown-ast-b5dfe9d20015a14ea13bbf7fd6679cdd-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is in continuation of \n","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":1,"offset":37},"indent":[1]}},{"type":"link","title":null,"url":"https://murtazabagwala.xyz/posts/8-ways-to-handle-state-management-part-1","children":[{"type":"text","value":"Part 1","position":{"start":{"line":3,"column":2,"offset":38},"end":{"line":3,"column":8,"offset":44},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":37},"end":{"line":3,"column":84,"offset":120},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" \nso, let us understand how \n","position":{"start":{"line":3,"column":84,"offset":120},"end":{"line":5,"column":1,"offset":149},"indent":[1,1]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/hooks-reference.html#useref","children":[{"type":"text","value":"useRef","position":{"start":{"line":5,"column":2,"offset":150},"end":{"line":5,"column":8,"offset":156},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":149},"end":{"line":5,"column":63,"offset":211},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" \nand ","position":{"start":{"line":5,"column":63,"offset":211},"end":{"line":6,"column":5,"offset":217},"indent":[1]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/context.html","children":[{"type":"text","value":"Context API","position":{"start":{"line":6,"column":6,"offset":218},"end":{"line":6,"column":17,"offset":229},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":217},"end":{"line":6,"column":57,"offset":269},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" can be used for state management.","position":{"start":{"line":6,"column":57,"offset":269},"end":{"line":6,"column":91,"offset":303},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":6,"column":91,"offset":303},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#userefs","title":null,"children":[],"data":{"hProperties":{"aria-label":"userefs permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"useRefs","position":{"start":{"line":8,"column":6,"offset":310},"end":{"line":8,"column":13,"offset":317},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":305},"end":{"line":8,"column":13,"offset":317},"indent":[]},"data":{"id":"userefs","htmlAttributes":{"id":"userefs"},"hProperties":{"id":"userefs","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"The \n","position":{"start":{"line":10,"column":1,"offset":319},"end":{"line":11,"column":1,"offset":324},"indent":[1]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/hooks-reference.html#useref","children":[{"type":"text","value":"useRef","position":{"start":{"line":11,"column":2,"offset":325},"end":{"line":11,"column":8,"offset":331},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":324},"end":{"line":11,"column":63,"offset":386},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":" \nwas introduced in React 16.8. \nIt is the functional alternative to Class based ","position":{"start":{"line":11,"column":63,"offset":386},"end":{"line":13,"column":49,"offset":467},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">createRef()</code>","position":{"start":{"line":13,"column":49,"offset":467},"end":{"line":13,"column":62,"offset":480},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":13,"column":62,"offset":480},"end":{"line":13,"column":63,"offset":481},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":319},"end":{"line":13,"column":63,"offset":481},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two main use cases for the ","position":{"start":{"line":15,"column":1,"offset":483},"end":{"line":15,"column":38,"offset":520},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">useRef</code>","position":{"start":{"line":15,"column":38,"offset":520},"end":{"line":15,"column":46,"offset":528},"indent":[]}},{"type":"text","value":" hook in a React functional component:- ","position":{"start":{"line":15,"column":46,"offset":528},"end":{"line":15,"column":86,"offset":568},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":483},"end":{"line":15,"column":86,"offset":568},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Accessing a DOM element.","position":{"start":{"line":17,"column":3,"offset":572},"end":{"line":17,"column":27,"offset":596},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":572},"end":{"line":17,"column":27,"offset":596},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":570},"end":{"line":17,"column":27,"offset":596},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Storing mutable information without triggering a re-render of that component.","position":{"start":{"line":18,"column":3,"offset":599},"end":{"line":18,"column":80,"offset":676},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":599},"end":{"line":18,"column":80,"offset":676},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":597},"end":{"line":18,"column":80,"offset":676},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":570},"end":{"line":18,"column":80,"offset":676},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"A ref provides a way to access DOM nodes \nor React elements created in the render method.\nThe reference to the element can be used to do interesting things \nsuch as changing the text content \nor changing the class name. \nEarlier in vanilla JavaScript it was done using ","position":{"start":{"line":20,"column":1,"offset":678},"end":{"line":25,"column":49,"offset":947},"indent":[1,1,1,1,1]}},{"type":"html","value":"<code class=\"language-text\">querySelectors</code>","position":{"start":{"line":25,"column":49,"offset":947},"end":{"line":25,"column":65,"offset":963},"indent":[]}},{"type":"text","value":" \nand then jQuery even made this process more seamless with a single function call using the ","position":{"start":{"line":25,"column":65,"offset":963},"end":{"line":26,"column":92,"offset":1056},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">$</code>","position":{"start":{"line":26,"column":92,"offset":1056},"end":{"line":26,"column":95,"offset":1059},"indent":[]}},{"type":"text","value":" sign.","position":{"start":{"line":26,"column":95,"offset":1059},"end":{"line":26,"column":101,"offset":1065},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":678},"end":{"line":26,"column":101,"offset":1065},"indent":[1,1,1,1,1,1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span><span class=\"token operator\">></span>\n    This is a title <span class=\"token keyword\">of</span> a div\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span> \n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>This is a paragraph<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n   \n  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword\">const</span> titleDiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background-color\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":28,"column":1,"offset":1067},"end":{"line":40,"column":4,"offset":1308},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"A Ref variable in React is a mutable object, \nand its value is persisted by React across re-renders. \nA ref object has a single property named ","position":{"start":{"line":42,"column":1,"offset":1310},"end":{"line":44,"column":42,"offset":1453},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">current</code>","position":{"start":{"line":44,"column":42,"offset":1453},"end":{"line":44,"column":51,"offset":1462},"indent":[]}},{"type":"text","value":" \nso, its structure is similar to ","position":{"start":{"line":44,"column":51,"offset":1462},"end":{"line":45,"column":33,"offset":1496},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">{ current: ReactElementReference }</code>","position":{"start":{"line":45,"column":33,"offset":1496},"end":{"line":45,"column":69,"offset":1532},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":45,"column":69,"offset":1532},"end":{"line":45,"column":70,"offset":1533},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1310},"end":{"line":45,"column":70,"offset":1533},"indent":[1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"link","url":"#using-useref-to-access-elements","title":null,"children":[],"data":{"hProperties":{"aria-label":"using useref to access elements permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Using useRef to access elements","position":{"start":{"line":47,"column":7,"offset":1541},"end":{"line":47,"column":38,"offset":1572},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1535},"end":{"line":47,"column":38,"offset":1572},"indent":[]},"data":{"id":"using-useref-to-access-elements","htmlAttributes":{"id":"using-useref-to-access-elements"},"hProperties":{"id":"using-useref-to-access-elements","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Let us look at how we could use the ","position":{"start":{"line":49,"column":1,"offset":1574},"end":{"line":49,"column":37,"offset":1610},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">useRef</code>","position":{"start":{"line":49,"column":37,"offset":1610},"end":{"line":49,"column":45,"offset":1618},"indent":[]}},{"type":"text","value":" hook to interact with a DOM element \nby switching the focus to the input box on clicking of a Button:","position":{"start":{"line":49,"column":45,"offset":1618},"end":{"line":50,"column":65,"offset":1720},"indent":[1]}}],"position":{"start":{"line":49,"column":1,"offset":1574},"end":{"line":50,"column":65,"offset":1720},"indent":[1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Form</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> textInput <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">focusTextInput</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>textInput<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>focusTextInput<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Focus the text input<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":52,"column":1,"offset":1722},"end":{"line":64,"column":4,"offset":2023},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"link","url":"#using-useref-to-store-information-in-state","title":null,"children":[],"data":{"hProperties":{"aria-label":"using useref to store information in state permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Using useRef to store information in State","position":{"start":{"line":66,"column":7,"offset":2031},"end":{"line":66,"column":49,"offset":2073},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2025},"end":{"line":66,"column":49,"offset":2073},"indent":[]},"data":{"id":"using-useref-to-store-information-in-state","htmlAttributes":{"id":"using-useref-to-store-information-in-state"},"hProperties":{"id":"using-useref-to-store-information-in-state","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"One of the important usages of ","position":{"start":{"line":68,"column":1,"offset":2075},"end":{"line":68,"column":32,"offset":2106},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">useRef</code>","position":{"start":{"line":68,"column":32,"offset":2106},"end":{"line":68,"column":40,"offset":2114},"indent":[]}},{"type":"text","value":" is to store state.\nIn React apps, at times frequent changes have to be tracked \nwithout enforcing the re-rendering of the component. \nand using ","position":{"start":{"line":68,"column":40,"offset":2114},"end":{"line":71,"column":11,"offset":2259},"indent":[1,1,1]}},{"type":"html","value":"<code class=\"language-text\">useState</code>","position":{"start":{"line":71,"column":11,"offset":2259},"end":{"line":71,"column":21,"offset":2269},"indent":[]}},{"type":"text","value":" can cause some unnecessary re-renders \nfor example, if we wanted to keep track of the number of times a component re-rendered. \nWe might try to do something like this:","position":{"start":{"line":71,"column":21,"offset":2269},"end":{"line":73,"column":40,"offset":2437},"indent":[1,1]}}],"position":{"start":{"line":68,"column":1,"offset":2075},"end":{"line":73,"column":40,"offset":2437},"indent":[1,1,1,1,1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">// CountRenders.js</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">CountRenders</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token constant\">I</span> have rendered <span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span> times<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":75,"column":1,"offset":2439},"end":{"line":89,"column":4,"offset":2674},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"But, storing in the state is going to trigger a re-render when it changes, \nevery time we increment the count \nour component will render again and thus create an infinite loop. ","position":{"start":{"line":91,"column":1,"offset":2676},"end":{"line":93,"column":67,"offset":2853},"indent":[1,1]}}],"position":{"start":{"line":91,"column":1,"offset":2676},"end":{"line":93,"column":67,"offset":2853},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"By simply replacing ","position":{"start":{"line":95,"column":1,"offset":2855},"end":{"line":95,"column":21,"offset":2875},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">count</code>","position":{"start":{"line":95,"column":21,"offset":2875},"end":{"line":95,"column":28,"offset":2882},"indent":[]}},{"type":"text","value":" to be a ","position":{"start":{"line":95,"column":28,"offset":2882},"end":{"line":95,"column":37,"offset":2891},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">useRef</code>","position":{"start":{"line":95,"column":37,"offset":2891},"end":{"line":95,"column":45,"offset":2899},"indent":[]}},{"type":"text","value":" hook rather than a ","position":{"start":{"line":95,"column":45,"offset":2899},"end":{"line":95,"column":65,"offset":2919},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">useState</code>","position":{"start":{"line":95,"column":65,"offset":2919},"end":{"line":95,"column":75,"offset":2929},"indent":[]}},{"type":"text","value":" hook,\nwe can safely store this mutated data without re-rendering:","position":{"start":{"line":95,"column":75,"offset":2929},"end":{"line":96,"column":60,"offset":2995},"indent":[1]}}],"position":{"start":{"line":95,"column":1,"offset":2855},"end":{"line":96,"column":60,"offset":2995},"indent":[1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">// App.js</span>\n\n  <span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> CountRenders <span class=\"token keyword\">from</span> <span class=\"token string\">\"./CountRenders\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>reload<span class=\"token punctuation\">,</span> setReload<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n       <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setReload</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>CountRenders <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n       <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// CountRenders.js</span>\n\n  <span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span> \n \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">CountRenders</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    count<span class=\"token punctuation\">.</span>current <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token constant\">I</span> have rendered <span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">}</span> times<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> CountRenders<span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":98,"column":1,"offset":2997},"end":{"line":139,"column":4,"offset":3689},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#context-api","title":null,"children":[],"data":{"hProperties":{"aria-label":"context api permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Context API","position":{"start":{"line":141,"column":6,"offset":3696},"end":{"line":141,"column":17,"offset":3707},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":3691},"end":{"line":141,"column":17,"offset":3707},"indent":[]},"data":{"id":"context-api","htmlAttributes":{"id":"context-api"},"hProperties":{"id":"context-api","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"The idea of React is to create small reusable components\nand these small components need data to work with, \nso, we pass data through props from the parent component to the child component. \nThis is fine if we are dealing with 1 or 2 levels of hierarchy \nbut, passing props from the parent component to a fourth- or fifth-level child component, \ncan slow down our application and cause development issues.","position":{"start":{"line":143,"column":1,"offset":3709},"end":{"line":148,"column":60,"offset":4114},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":143,"column":1,"offset":3709},"end":{"line":148,"column":60,"offset":4114},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The Context API can be used to share data with multiple components, \nwithout having to pass data through props manually. \nFor example, in some use cases, \nthe Context API is ideal for theming, user language, authentication, etc.","position":{"start":{"line":150,"column":1,"offset":4116},"end":{"line":153,"column":74,"offset":4344},"indent":[1,1,1]}}],"position":{"start":{"line":150,"column":1,"offset":4116},"end":{"line":153,"column":74,"offset":4344},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To start with the Context API, \nthe first thing we need to do is to \ncreate a context using the ","position":{"start":{"line":155,"column":1,"offset":4346},"end":{"line":157,"column":28,"offset":4442},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">createContext</code>","position":{"start":{"line":157,"column":28,"offset":4442},"end":{"line":157,"column":43,"offset":4457},"indent":[]}},{"type":"text","value":" function from React.","position":{"start":{"line":157,"column":43,"offset":4457},"end":{"line":157,"column":64,"offset":4478},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4346},"end":{"line":157,"column":64,"offset":4478},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Then we need to add the ","position":{"start":{"line":159,"column":1,"offset":4480},"end":{"line":159,"column":25,"offset":4504},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Provider</code>","position":{"start":{"line":159,"column":25,"offset":4504},"end":{"line":159,"column":35,"offset":4514},"indent":[]}},{"type":"text","value":" component \nwhich is going to wrap the components that are going to have access to our context.","position":{"start":{"line":159,"column":35,"offset":4514},"end":{"line":160,"column":84,"offset":4609},"indent":[1]}}],"position":{"start":{"line":159,"column":1,"offset":4480},"end":{"line":160,"column":84,"offset":4609},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Finally, we need to add ","position":{"start":{"line":162,"column":1,"offset":4611},"end":{"line":162,"column":25,"offset":4635},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Consumer</code>","position":{"start":{"line":162,"column":25,"offset":4635},"end":{"line":162,"column":35,"offset":4645},"indent":[]}},{"type":"text","value":" components that are going to consume the data.","position":{"start":{"line":162,"column":35,"offset":4645},"end":{"line":162,"column":82,"offset":4692},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":4611},"end":{"line":162,"column":82,"offset":4692},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let us create a basic Authentication example using ","position":{"start":{"line":164,"column":1,"offset":4694},"end":{"line":164,"column":52,"offset":4745},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Context API","position":{"start":{"line":164,"column":54,"offset":4747},"end":{"line":164,"column":65,"offset":4758},"indent":[]}}],"position":{"start":{"line":164,"column":52,"offset":4745},"end":{"line":164,"column":67,"offset":4760},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":164,"column":67,"offset":4760},"end":{"line":164,"column":68,"offset":4761},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4694},"end":{"line":164,"column":68,"offset":4761},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So, our application is going to have an App component \nwhich will host two components. \nOne is going to have authentication logic \nand the other will be a protected component that the user can only see once he’s authenticated.","position":{"start":{"line":166,"column":1,"offset":4763},"end":{"line":169,"column":96,"offset":4989},"indent":[1,1,1]}}],"position":{"start":{"line":166,"column":1,"offset":4763},"end":{"line":169,"column":96,"offset":4989},"indent":[1,1,1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">//Context.js</span>\n\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> “react”<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> AuthContext <span class=\"token operator\">=</span> <span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    isLoggedIn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">login</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">logout</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":171,"column":1,"offset":4991},"end":{"line":182,"column":4,"offset":5183},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Let us create an App component with AuthContext \nmakes sure that anytime anything in the context changes, \nchildren component of App that uses context change as well.","position":{"start":{"line":184,"column":1,"offset":5185},"end":{"line":186,"column":60,"offset":5351},"indent":[1,1]}}],"position":{"start":{"line":184,"column":1,"offset":5185},"end":{"line":186,"column":60,"offset":5351},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can have user state in the App component \nand bind this to the value prop of our context \nand hence when the state here changes, \nit will re-render the components that use context.","position":{"start":{"line":188,"column":1,"offset":5353},"end":{"line":191,"column":51,"offset":5536},"indent":[1,1,1]}}],"position":{"start":{"line":188,"column":1,"offset":5353},"end":{"line":191,"column":51,"offset":5536},"indent":[1,1,1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">// App.js Provider</span>\n\n  <span class=\"token keyword\">import</span> react <span class=\"token keyword\">from</span> ‘react’<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AuthContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> ‘<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>Context’<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> Authentication <span class=\"token keyword\">from</span> ‘<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>Authentication<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> ProtectedResource <span class=\"token keyword\">from</span> ‘<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>ProtectedResource<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>loggedIn<span class=\"token punctuation\">,</span> setLoggedIn<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">login</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">logout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>AuthContext<span class=\"token punctuation\">.</span>Provider value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>isLoggedIn<span class=\"token operator\">:</span> loggedIn<span class=\"token punctuation\">,</span> login<span class=\"token punctuation\">,</span> logout<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Authentication<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>ProtectedResource <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AuthContext<span class=\"token punctuation\">.</span>Provider <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>  </code></pre></div>","position":{"start":{"line":193,"column":1,"offset":5538},"end":{"line":223,"column":4,"offset":6208},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, let us add ","position":{"start":{"line":225,"column":1,"offset":6210},"end":{"line":225,"column":17,"offset":6226},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Consumers</code>","position":{"start":{"line":225,"column":17,"offset":6226},"end":{"line":225,"column":28,"offset":6237},"indent":[]}},{"type":"text","value":" which listen to the context changes in other components:","position":{"start":{"line":225,"column":28,"offset":6237},"end":{"line":225,"column":85,"offset":6294},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":6210},"end":{"line":225,"column":85,"offset":6294},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">// ProtectedResource.js Consumer</span>\n\n  <span class=\"token keyword\">import</span> react<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> ‘react’<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AuthContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Context\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ProtectedResource</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">const</span> authContext <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>AuthContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> authContext<span class=\"token punctuation\">.</span>isLoggedIn <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Protected resource<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":227,"column":1,"offset":6296},"end":{"line":239,"column":4,"offset":6609},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">// Authentication.js Consumer</span>\n\n  <span class=\"token keyword\">import</span> react<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> ‘react’<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AuthContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Context\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Authentication</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> authContext <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>AuthContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loginHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      authContext<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">logoutHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      authContext<span class=\"token punctuation\">.</span><span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span> <span class=\"token operator\">!</span>authContext<span class=\"token punctuation\">.</span>isLoggedIn <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>loginHandler<span class=\"token punctuation\">}</span><span class=\"token operator\">></span> Login <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">{</span> authContext<span class=\"token punctuation\">.</span>isLoggedIn <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>logoutHandler<span class=\"token punctuation\">}</span><span class=\"token operator\">></span> Logout <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":241,"column":1,"offset":6611},"end":{"line":267,"column":4,"offset":7207},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":268,"column":1,"offset":7208}}}}