{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/redux/","result":{"data":{"site":{"siteMetadata":{"title":"From My Head to the Cloud","subtitle":"Where I put my ideas and experiences into words."}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/8-ways-to-handle-state-management-part-2","categorySlug":"/category/state-management/"},"frontmatter":{"title":"React State management - Part 2","date":"2022-02-09T18:00:37.121Z","category":"State Management","description":"Learn some of the inherent ways of managing state without using any external state management tool."}}},{"node":{"fields":{"slug":"/posts/8-ways-to-handle-state-management-part-1","categorySlug":"/category/state-management/"},"frontmatter":{"title":"Different ways to handle state in React applications","date":"2021-11-20T18:00:37.121Z","category":"State Management","description":"Sometimes, it is better not to use any external state management tool unless our application is that complex.  We can avoid complexities involved in state management using some of the inherent ways."}}},{"node":{"fields":{"slug":"/posts/redux-state-normalization","categorySlug":"/category/state-management/"},"frontmatter":{"title":"Normalizing Redux state to ensure good performance in React apps","date":"2021-09-20T18:00:37.121Z","category":"State Management","description":"In complex applications, client apps have to store and manage a large amount of nested data, and if the data is not normalized, it can be incredibly time-consuming for a program to lookup nested data which could become a performance concern."}}}]}},"pageContext":{"tag":"redux","currentPage":0,"postsLimit":6,"postsOffset":0,"prevPagePath":"/tag/redux","nextPagePath":"/tag/redux/page/1","hasPrevPage":false,"hasNextPage":false}},"staticQueryHashes":["2246977889","2727970573","984292147"],"slicesMap":{}}