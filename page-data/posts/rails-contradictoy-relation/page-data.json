{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/rails-contradictoy-relation","result":{"data":{"markdownRemark":{"id":"7611efec-3635-5da4-9ff1-18087d4e7142","html":"<p>Previously, relation calculations such as <code class=\"language-text\">count</code> would make a query\neven when passed a contradiction,\n<a href=\"https://github.com/jhawthorn/rails/blob/main/activerecord/lib/active_record/relation/where_clause.rb#L99\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">contradiction relation</a>\nmeans passing an empty array for eg:-</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  User.where(id: []).count</code></pre></div>\n<p>It does not make sense to call a database for such contradictory relations.</p>\n<h4 id=\"before\" style=\"position:relative;\"><a href=\"#before\" aria-label=\"before permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Before</h4>\n<p>So, before Rails 7 was introduced,\nthe database was called if the relation used for <code class=\"language-text\">count</code>, <code class=\"language-text\">sum</code>, <code class=\"language-text\">average</code>, <code class=\"language-text\">minimum</code>\nand <code class=\"language-text\">maximum</code> would be contradictory.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  => Product.where(title: []).count\n  Product Count (4.7ms)  SELECT COUNT(*) FROM \"products\" WHERE 1=0\n  => 0 \n\n\n  => Product.where(title: []).sum(:price)\n  Product Sum (17.5ms)  SELECT SUM(\"products\".\"price\") FROM \"products\" WHERE 1=0\n  => 0 \n\n\n  => Product.where(title: []).average(:price)\n  Product Average (3.5ms)  SELECT AVG(\"products\".\"price\") FROM \"products\" WHERE 1=0\n  => nil \n\n\n  => Product.where(title: []).minimum(:id)\n  Product Minimum (5.0ms)  SELECT MIN(\"products\".\"id\") FROM \"products\" WHERE 1=0\n  => nil \n\n\n  => Product.where(title: []).maximum(:id)\n  Product Minimum (5.0ms)  SELECT MAX(\"products\".\"id\") FROM \"products\" WHERE 1=0\n  => nil </code></pre></div>\n<p>As it can be seen,\nit would make a query to the database even when passed a contradiction.</p>\n<h4 id=\"after\" style=\"position:relative;\"><a href=\"#after\" aria-label=\"after permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>After</h4>\n<p>Now after Rails 7, it avoids making a query to the database.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  => Product.where(title: []).count\n  => 0 \n\n\n  => Product.where(title: []).sum(:price)\n  => 0 \n\n\n  => Product.where(title: []).average(:price)\n  => nil \n\n\n  => Product.where(title: []).minimum(:id)\n  => nil \n\n\n  => Product.where(title: []).maximum(:id)\n  => nil  </code></pre></div>\n<p>Check out\n<a href=\"https://github.com/rails/rails/pull/45030\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the PR</a>\nfor more details.</p>","fields":{"slug":"/posts/rails-contradictoy-relation","tagSlugs":["/tag/rails/","/tag/rails-7/"]},"frontmatter":{"date":"2022-07-20T18:00:37.121Z","description":"Rails now avoids making a query to the database if the calculation contains a contradictory relation.","tags":["rails","rails-7"],"title":"Rails avoids queries when performing calculations on contradictory relation","socialImage":null}}},"pageContext":{"slug":"/posts/rails-contradictoy-relation"}},"staticQueryHashes":["251939775","401334301","984292147"]}