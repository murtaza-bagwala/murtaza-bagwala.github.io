{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/rails-beginless-inclusion/","result":{"data":{"markdownRemark":{"id":"6e5bfc52-a402-54fa-bb07-c4ca8db690f2","html":"<p>Now that Ruby 2.7 has added the support for\n<a href=\"https://blog.saeloun.com/2019/08/19/ruby-2-7-adds-beginless-range.html\">beginless range</a>,\nRails 7 also adds support to include the beginless range in\nActiveRecord inclusivity/exclusivity validators.</p>\n<p>Prior to Rails 7, if we were to add a validation to a <code class=\"language-text\">Product</code> model\nwhere the price needs to be within 5000,\nwe'd have to follow this method-</p>\n<h4>Before</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\n  class Product &lt; ApplicationRecord\n\n    validates_inclusion_of :price, in: 0..5000\n\n  end\n</code></pre></div>\n<p>Also, if we would try adding beginless range,\nthen it will throw an error.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\n  => Product.create(title: \"Detergent\", description: \"A mixture of surfactants with cleansing properties\", price: 4000)\n  /Users/.rvm/gems/ruby-3.0.2/gems/activemodel-7.0.3/lib/active_model/validations/clusivity.rb:45:in `first': cannot get the first element of beginless range (RangeError)\n</code></pre></div>\n<p>As it can be seen,\nit throws an error saying <code class=\"language-text\">cannot get the first element of beginless range</code>.</p>\n<h4>After</h4>\n<p>After Rails 7,\nwe can now add the beginless range.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\n  class Product &lt; ApplicationRecord\n\n    validates_inclusion_of :price, in: ..5000\n\n  end\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\n  => Product.create(title: \"Detergent\", description: \"A mixture of surfactants with cleansing properties\", price: 4000)\n  => TRANSACTION (7.5ms)  BEGIN\n  Product Create (5.0ms)  INSERT INTO \"products\" (\"name\", \"description\", \"created_at\", \"updated_at\", \"price\") VALUES ($1, $2, $3, $4, $5) RETURNING \"id\"  [[\"name\", \"Detergent\"], [\"description\", \"A mixture of surfactants with cleansing properties\"], [\"created_at\", \"2022-08-10 20:10:06.227125\"], [\"updated_at\", \"2022-08-10 20:10:06.227125\"], [\"price\", 4000]]\n  TRANSACTION (2.5ms)  COMMIT                                                                                      \n</code></pre></div>\n<p>Check out\n<a href=\"https://github.com/rails/rails/pull/45123\">the PR</a>\nfor more details.</p>","fields":{"slug":"/posts/rails-beginless-inclusion","tagSlugs":["/tag/rails/","/tag/rails-7/"]},"frontmatter":{"date":"2022-08-18T18:00:37.121Z","description":"Rails now adds support to include the beginless range in active record inclusivity/exclusivity validators.","tags":["rails","rails-7"],"title":"Rails adds beginless range support to clusivity","socialImage":null}}},"pageContext":{"slug":"/posts/rails-beginless-inclusion"}},"staticQueryHashes":["2246977889","2727970573","984292147"],"slicesMap":{}}