{"componentChunkName":"component---src-templates-index-template-js","path":"/page/2","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/8-ways-to-handle-state-management-part-2","categorySlug":"/category/state-management/"},"frontmatter":{"title":"React State management - Part 2","date":"2022-02-09T18:00:37.121Z","category":"State Management","description":"Learn some of the inherent ways of managing state without using any external state management tool."}}},{"node":{"fields":{"slug":"/posts/amazon-personalize","categorySlug":"/category/amazon/"},"frontmatter":{"title":"Using Amazon Personalize to create a Recommendation System","date":"2021-12-29T18:00:37.121Z","category":"amazon","description":"A Step-By-Step Guide to Building a Recommender System using Amazon Personalize with its Similar-Items Recipe."}}},{"node":{"fields":{"slug":"/posts/rails-7-caching-helper","categorySlug":"/category/rails/"},"frontmatter":{"title":"Rails 7 adds caching? and uncachable! helper","date":"2021-12-20T18:00:37.121Z","category":"Rails","description":"Starting with Rails 7, we can add caching? helper to check whether the current code path is being cached and uncacheable! helper to avoid fragment caching."}}},{"node":{"fields":{"slug":"/posts/8-ways-to-handle-state-management-part-1","categorySlug":"/category/state-management/"},"frontmatter":{"title":"Different ways to handle state in React applications","date":"2021-11-20T18:00:37.121Z","category":"State Management","description":"Sometimes, it is better not to use any external state management tool unless our application is that complex.  We can avoid complexities involved in state management using some of the inherent ways."}}},{"node":{"fields":{"slug":"/posts/redux-state-normalization","categorySlug":"/category/state-management/"},"frontmatter":{"title":"Normalizing Redux state to ensure good performance in React apps","date":"2021-09-20T18:00:37.121Z","category":"State Management","description":"In complex applications, client apps have to store and manage a large amount of nested data, and if the data is not normalized, it can be incredibly time-consuming for a program to lookup nested data which could become a performance concern."}}},{"node":{"fields":{"slug":"/posts/state-management","categorySlug":"/category/state-management/"},"frontmatter":{"title":"My experience with Egghead Portfolio Project Club","date":"2021-07-20T18:00:37.121Z","category":"State Management","description":"A couple of months back I had won the full year of free egghead courses in one of the Gatsby contests and one fine day while I was enjoying my free premium access and watching some amazing tutorials on Redux and State Management I came to know about Egghead Portfolio Project Club and I found it interesting because I really believe in learning together. Through this club, I got a chance to meet and learn from some amazing developers from all over the world, and in this post, I would like to describe my experience being a part of this club."}}}]}},"pageContext":{"currentPage":2,"postsLimit":6,"postsOffset":12,"prevPagePath":"/page/1","nextPagePath":"/page/3","hasPrevPage":true,"hasNextPage":true}},"staticQueryHashes":["251939775","401334301","984292147"]}