{"version":3,"file":"component---src-templates-post-template-js-b729e07ff7ff6def1433.js","mappings":"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","sources":["webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.js","webpack://gatsby-starter-lumen/./src/components/Post/Comments/Comments.js","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.js","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.js","webpack://gatsby-starter-lumen/./src/components/Post/Tags/Tags.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Tags/Tags.js","webpack://gatsby-starter-lumen/./src/components/Post/Post.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Post.js","webpack://gatsby-starter-lumen/./src/templates/post-template.js","webpack://gatsby-starter-lumen/./node_modules/react-disqus-comments/build/components/DisqusThread.js","webpack://gatsby-starter-lumen/./node_modules/react-disqus-comments/build/main.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"author\":\"Author-module--author--1c58d\",\"author__bio-twitter\":\"Author-module--author__bio-twitter--75212\",\"authorBioTwitter\":\"Author-module--author__bio-twitter--75212\"};","import React from 'react';\nimport { getContactHref } from '../../../utils';\nimport styles from './Author.module.scss';\nimport { useSiteMetadata } from '../../../hooks';\n\nconst Author = () => {\n  const { author } = useSiteMetadata();\n\n  return (\n    <div className={styles['author']}>\n      <p className={styles['author__bio']}>\n        {author.bio}\n        <a\n          className={styles['author__bio-twitter']}\n          href={getContactHref('twitter', author.contacts.twitter)}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <strong>{author.name}</strong> on Twitter\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Author;\n","import React from 'react';\nimport ReactDisqusComments from 'react-disqus-comments';\nimport { useSiteMetadata } from '../../../hooks';\n\n\nconst Comments = ({ postTitle, postSlug }) => {\n  const { url, disqusShortname } = useSiteMetadata();\n\n  if (!disqusShortname) {\n    return null;\n  }\n\n  return (\n    <ReactDisqusComments\n      shortname={disqusShortname}\n      identifier={postTitle}\n      title={postTitle}\n      url={url + postSlug}\n    />\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Content-module--content--80d58\",\"content__title\":\"Content-module--content__title--f2408\",\"contentTitle\":\"Content-module--content__title--f2408\",\"content__body\":\"Content-module--content__body--0ce51\",\"contentBody\":\"Content-module--content__body--0ce51\"};","import React from 'react';\nimport styles from './Content.module.scss';\n\n\nconst Content = ({ body, title }) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport default {\"meta__date\":\"Meta-module--meta__date--0c1b6\",\"metaDate\":\"Meta-module--meta__date--0c1b6\"};","import React from 'react';\nimport moment from 'moment';\nimport styles from './Meta.module.scss';\n\n\nconst Meta = ({ date }) => (\n  <div className={styles['meta']}>\n    <p className={styles['meta__date']}>Published {moment(date).format('D MMM YYYY')}</p>\n  </div>\n);\n\nexport default Meta;\n","// extracted by mini-css-extract-plugin\nexport default {\"tags\":\"Tags-module--tags--18589\",\"tags__list\":\"Tags-module--tags__list--7df03\",\"tagsList\":\"Tags-module--tags__list--7df03\",\"tags__list-item\":\"Tags-module--tags__list-item--a981e\",\"tagsListItem\":\"Tags-module--tags__list-item--a981e\",\"tags__list-item-link\":\"Tags-module--tags__list-item-link--3ec2a\",\"tagsListItemLink\":\"Tags-module--tags__list-item-link--3ec2a\"};","import React from 'react';\nimport { Link } from 'gatsby';\nimport styles from './Tags.module.scss';\n\n\nconst Tags = ({ tags, tagSlugs }) => (\n  <div className={styles['tags']}>\n    <ul className={styles['tags__list']}>\n      {tagSlugs && tagSlugs.map((slug, i) => (\n        <li className={styles['tags__list-item']} key={tags[i]}>\n          <Link to={slug} className={styles['tags__list-item-link']}>\n            {tags[i]}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// extracted by mini-css-extract-plugin\nexport default {\"post__footer\":\"Post-module--post__footer--0bca4\",\"postFooter\":\"Post-module--post__footer--0bca4\",\"post__comments\":\"Post-module--post__comments--27c37\",\"postComments\":\"Post-module--post__comments--27c37\",\"post__home-button\":\"Post-module--post__home-button--c395c\",\"postHomeButton\":\"Post-module--post__home-button--c395c\"};","import React from 'react';\nimport { Link } from 'gatsby';\nimport Author from './Author';\nimport Comments from './Comments';\nimport Content from './Content';\nimport Meta from './Meta';\nimport Tags from './Tags';\nimport styles from './Post.module.scss';\n\n\nconst Post = ({ post }) => {\n  const { html } = post;\n  const { tagSlugs, slug } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles['post']}>\n      <Link className={styles['post__home-button']} to=\"/\">All Articles</Link>\n\n      <div className={styles['post__content']}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles['post__footer']}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div>\n\n      <div className={styles['post__comments']}>\n        <Comments postSlug={slug} postTitle={post.frontmatter.title} />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\nimport { useSiteMetadata } from '../hooks';\n\nconst PostTemplate = ({ data }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n  const { frontmatter } = data.markdownRemark;\n  const { title: postTitle, description: postDescription, socialImage } = frontmatter;\n  const metaDescription = postDescription !== null ? postDescription : siteSubtitle;\n\n  return (\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription} socialImage={socialImage} >\n      <Post post={data.markdownRemark} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;","'use strict';\n\nmodule.exports = require('./components/DisqusThread');"],"names":["Author","author","useSiteMetadata","React","className","styles","bio","href","getContactHref","contacts","twitter","rel","target","name","_ref","postTitle","postSlug","url","disqusShortname","ReactDisqusComments","shortname","identifier","title","body","dangerouslySetInnerHTML","__html","date","moment","format","tags","tagSlugs","map","slug","i","key","Link","to","post","html","fields","frontmatter","Content","Meta","Tags","Comments","data","siteTitle","subtitle","siteSubtitle","markdownRemark","description","postDescription","socialImage","metaDescription","Layout","Post","_extends","Object","assign","arguments","length","source","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","createElement","id","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","Component","displayName","propTypes","string","isRequired","category_id","func","defaultProps","location","exports","module"],"sourceRoot":""}